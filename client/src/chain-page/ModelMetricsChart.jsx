/* eslint-disable react-hooks/exhaustive-deps */
/* eslint-disable react/prop-types */
import { useMemo } from "react";
import {
  LineChart,
  Line,
  XAxis,
  YAxis,
  Tooltip,
  CartesianGrid,
  ResponsiveContainer,
} from "recharts";
import { Card } from "react-bootstrap";

const formatDate = (date) => {
  const d = new Date(date);
  const day = String(d.getDate()).padStart(2, "0");
  const month = String(d.getMonth() + 1).padStart(2, "0");
  const year = String(d.getFullYear()).slice(-2);
  return `${day}/${month}/${year}`;
};

const ModelMetricsChart = ({ data, dataKey, label, loading }) => {
  const min = useMemo(
    () => Math.min(...data?.map((i) => i[dataKey])),
    [data?.length, dataKey]
  );

  return (
    <Card
      className="mb-3"
      style={{
        padding: "20px",
        backgroundColor: "#333", // Dark background color
        color: "white", // Font color set to white for contrast
      }}
    >
      <Card.Body>
        <Card.Title
          className="font-weight-bold"
          style={{ marginBottom: "20px", color: "white" }} // Title color white
        >
          {label}
        </Card.Title>
        {loading ? (
          <p style={{ color: "white" }}>Loading...</p> // Loading text color white
        ) : (
          <ResponsiveContainer width="100%" height={400}>
            <LineChart margin={{ top: 20, right: 30, bottom: 5 }} data={data}>
              <CartesianGrid strokeDasharray="3 3" stroke="#555" />{" "}
              {/* Grid color */}
              <XAxis
                dataKey="created_at"
                tickFormatter={formatDate}
                stroke="white"
              />{" "}
              {/* X-Axis text color white */}
              <YAxis domain={[min, "auto"]} stroke="white" />{" "}
              {/* Y-Axis text color white */}
              <Tooltip
                labelFormatter={(label) => new Date(label).toLocaleString()}
                contentStyle={{ backgroundColor: "#444", color: "white" }} // Tooltip background color
              />
              <Line
                type="monotone"
                dataKey={dataKey}
                stroke="#8884d8" // Line color
                strokeWidth={1.5}
              />
            </LineChart>
          </ResponsiveContainer>
        )}
      </Card.Body>
    </Card>
  );
};

export default ModelMetricsChart;
