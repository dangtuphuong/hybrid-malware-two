// ReportPage.jsx
import React, { useEffect, useState, useMemo } from "react";
import { Grid2, Typography } from "@mui/material";
import { useParams } from "react-router-dom";
import DataService from "../services/data-service.js";
import Layout from "../components/Layout.jsx";
import Metadata from "../components/figures/Metadata.jsx";
import MalwareDistChart from "../components/figures/MalwareDistChart.jsx";
import CustomBarChart from "../components/figures/BarChart.jsx";
import MultiBarChart from "../components/figures/MultiBarChart.jsx";

const ReportPage = () => {
  const { reportId } = useParams();
  const [loading, setLoading] = useState(false);
  const [report, setReport] = useState({});
  const [models, setModels] = useState({});

  useEffect(() => {
    setLoading(true);
    DataService.getReportById(reportId)
      .then((res) => {
        setReport(res?.data?.report ?? {});
        setModels(res?.data?.models ?? {});
      })
      .catch((err) => {
        console.log(err);
      })
      .finally(() => setLoading(false));
  }, [reportId]);

  const k = Object.keys(models)?.length;

  const recallData = useMemo(() => {
    return Object.entries(models).reduce(
      (result, [modelName, modelDetails]) => {
        result[modelName] = modelDetails?.recall;
        return result;
      },
      {}
    );
  }, [models, k]);

  const accuracyData = useMemo(() => {
    return Object.entries(models).reduce(
      (result, [modelName, modelDetails]) => {
        result[modelName] = modelDetails?.accuracy;
        return result;
      },
      {}
    );
  }, [models, k]);

  const f1Data = useMemo(() => {
    return Object.entries(models).reduce(
      (result, [modelName, modelDetails]) => {
        result[modelName] = modelDetails?.f1;
        return result;
      },
      {}
    );
  }, [models, k]);

  const precisionData = useMemo(() => {
    return Object.entries(models).reduce(
      (result, [modelName, modelDetails]) => {
        result[modelName] = modelDetails.precision;
        return result;
      },
      {}
    );
  }, [models, k]);

  const classificationData = useMemo(() => {
    return Object.entries(models).reduce(
      (result, [modelName, modelDetails]) => {
        result[modelName] = modelDetails.classification_report;
        return result;
      },
      {}
    );
  }, [models, k]);

  const distData = useMemo(() => {
    return Object.entries(report?.malware_distribution || {}).reduce(
      (result, [modelName, modelValue]) => [
        ...result,
        { id: modelName, label: modelName, value: modelValue },
      ],
      []
    );
  }, [report, k]);

  return (
    <Layout>
      <Typography variant="h5" sx={{ mb: 4, fontWeight: 600 }}>
        Analytical Report
      </Typography>
      <Grid2 container spacing={2}>
        <Grid2 size={6}>
          <Metadata report={report} />
        </Grid2>
        <Grid2 size={6}>
          <MalwareDistChart loading={loading} data={distData} />
        </Grid2>
        <Grid2 size={6}>
          <CustomBarChart
            loading={loading}
            label="Accuracy"
            data={accuracyData}
          />
        </Grid2>
        <Grid2 size={6}>
          <CustomBarChart
            loading={loading}
            label="Precision"
            data={precisionData}
          />
        </Grid2>
        <Grid2 size={6}>
          <CustomBarChart loading={loading} label="Recall" data={recallData} />
        </Grid2>
        <Grid2 size={6}>
          <CustomBarChart loading={loading} label="F1 Score" data={f1Data} />
        </Grid2>
        <Grid2 size={12}>
          <MultiBarChart
            loading={loading}
            label="Classification Report"
            data={classificationData}
          />
        </Grid2>
      </Grid2>
    </Layout>
  );
};

export default ReportPage;
