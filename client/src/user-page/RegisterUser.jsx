import React, { useState } from "react";
import { Link } from "react-router-dom";
import { useNavigate } from "react-router-dom";
import AuthService from "../services/auth-service";
import classnames from "classnames";
import styles from "./RegisterUser.module.scss";

const defaultData = { name: "", email: "", password: "", role: "1" };

const RegisterUser = () => {
  const navigate = useNavigate();
  const [loading, setLoading] = useState(false);
  const [formData, setFormData] = useState(defaultData);
  const [error, setError] = useState("");

  const canNotSubmit =
    loading ||
    !formData?.email ||
    !formData?.name ||
    !formData?.password ||
    !formData?.role;

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData((prevState) => ({
      ...prevState,
      [name]: value,
    }));
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    setLoading(true);
    AuthService.register({
      name: formData?.name,
      email: formData?.email,
      password: formData?.password,
      role: Number(formData?.role),
    })
      .then(() => {
        navigate("/home");
        setFormData(defaultData);
      })
      .catch((e) => {
        console.log(e);
        setError(e?.response?.data?.error);
      })
      .finally(() => setLoading(false));
  };

  return (
    <div className={styles.form}>
      <h2>Register User</h2>
      <form onSubmit={handleSubmit}>
        <div className={styles.field}>
          <label htmlFor="name">Name:</label>
          <input
            className={styles.inputField}
            type="text"
            id="name"
            name="name"
            value={formData?.name}
            onChange={handleChange}
            required
          />
        </div>
        <div className={styles.field}>
          <label htmlFor="email">Email:</label>
          <input
            className={styles.inputField}
            type="email"
            id="email"
            name="email"
            value={formData?.email}
            onChange={handleChange}
            required
          />
        </div>
        <div className={styles.field}>
          <label htmlFor="password">Password:</label>
          <input
            className={styles.inputField}
            type="password"
            id="password"
            name="password"
            value={formData?.password}
            onChange={handleChange}
            required
          />
        </div>
        <div className={styles.field}>
          <div className={styles.radioGroup}>
            <label>
              <input
                type="radio"
                name="role"
                value="1"
                checked={formData?.role === "1"}
                onChange={handleChange}
              />
              Admin
            </label>
            <label>
              <input
                type="radio"
                name="role"
                value="0"
                checked={formData?.role === "0"}
                onChange={handleChange}
              />
              User
            </label>
          </div>
        </div>
        {!!error && <div className={styles.error}>{error}</div>}
        <div className={styles.buttonGroup}>
          <Link to="/" className={styles.backButton}>
            Back
          </Link>
          <button
            disabled={canNotSubmit}
            className={classnames(styles.submitButton, {
              [styles.disabled]: canNotSubmit,
            })}
            type="submit"
          >
            Register
          </button>
        </div>
      </form>
    </div>
  );
};

export default RegisterUser;
