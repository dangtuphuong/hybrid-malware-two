import React, { useState } from "react";
import { Link, useNavigate } from "react-router-dom";
import AuthService from "../services/auth-service";
import styles from "./LoginPage.module.scss";

const defaultData = { email: "", password: "" };

const LoginPage = () => {
  const navigate = useNavigate();
  const [loading, setLoading] = useState(false);
  const [credentials, setCredentials] = useState(defaultData);
  const [error, setError] = useState("");

  const handleChange = (e) => {
    const { name, value } = e?.target || {};
    setCredentials((prevState) => ({
      ...prevState,
      [name]: value,
    }));
  };

  const authenticateUser = async (e) => {
    e.preventDefault();
    setLoading(true);
    try {
      const response = await AuthService.login({
        email: credentials.email,
        password: credentials.password,
      });

      console.log("Full Response:", response); // Log the full response object

      // Assuming the user role is available in the response object
      const role = response.user?.role; // Access the user role directly from the response

      // Set user in local storage
      localStorage.setItem("user", JSON.stringify(response.user)); // Save user info in local storage

      // Redirect based on user role
      if (role === 1) {
        navigate("/admin-home"); // Redirect to Admin Home Page
      } else {
        navigate("/user-home"); // Redirect to User Home Page
      }

      setCredentials(defaultData);
    } catch (err) {
      console.error("Error:", err);
      const message =
        err.response?.data?.error || err.message || "Login failed";
      setError(message);
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className={styles.form}>
      <h2>Login</h2>
      <form onSubmit={authenticateUser}>
        <div className={styles.field}>
          <label htmlFor="email">Email:</label>
          <input
            className={styles.inputField}
            type="email"
            id="email"
            name="email"
            value={credentials.email}
            onChange={handleChange}
            required
          />
        </div>
        <div className={styles.field}>
          <label htmlFor="password">Password:</label>
          <input
            className={styles.inputField}
            type="password"
            id="password"
            name="password"
            value={credentials.password}
            onChange={handleChange}
            required
          />
        </div>
        {error && <div className={styles.error}>{error}</div>}
        <div className={styles.buttonGroup}>
          <Link to="/" className={styles.backButton}>
            Back
          </Link>
          <button
            disabled={loading}
            type="submit"
            className={styles.submitButton}
          >
            {loading ? "Loading..." : "Login"}
          </button>
        </div>
      </form>
    </div>
  );
};

export default LoginPage;
