import pandas as pd
import joblib


def predict_from_model(file, model_id):
    # Load models from file
    try:
        models = joblib.load('models_with_ids.pkl')
    except FileNotFoundError:
        raise FileNotFoundError("Models file 'models_with_ids.pkl' not found.")

    # Check if models dictionary is empty
    if not models:
        raise ValueError("No models found in 'models_with_ids.pkl'.")

    # Check if the specified model_id exists
    if model_id not in models:
        raise ValueError(f"Model ID '{model_id}' not found.")

    # Get the model and predict
    model_info = models[model_id]
    model = model_info['model']
    label_encoder = model_info.get('label_encoder', None)
    feature_columns = model_info['feature_columns']
    separator = model_info.get('separator', ',')

    # Load the new data
    data = pd.read_csv(file, sep=separator)

    # Handle missing values
    data = data.ffill()

    # Prepare the features for prediction
    X_new = data[feature_columns]

    # Get predictions
    predictions = model.predict(X_new)

    # Inverse-transform the encoded labels if the label encoder exists
    if label_encoder:
        predictions_decoded = label_encoder.inverse_transform(predictions)
    else:
        predictions_decoded = predictions

    # Convert predictions to list for easy reading
    result = {
        'model_label': model_info['label'],
        'predictions': predictions_decoded.tolist()
    }

    return result
