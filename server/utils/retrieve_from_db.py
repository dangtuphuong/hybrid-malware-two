import mysql.connector
from utils.connect_to_db import connect_to_db


def get_reports():
    try:
        connection = connect_to_db()
        cursor = connection.cursor()

        # Fetch all reports
        reports_query = "SELECT * FROM report"
        cursor.execute(reports_query)
        reports = cursor.fetchall()

        # Get column names
        column_names = [desc[0] for desc in cursor.description]

        # Prepare the response
        reports_response = []
        for report in reports:
            reports_response.append(dict(zip(column_names, report)))

        return reports_response

    except mysql.connector.Error as err:
        print(f"Error: {err}")
    finally:
        # Clean up and close the connection
        if cursor:
            cursor.close()
        if connection:
            connection.close()


def get_latest_chain_model_metrics():
    # Create a connection
    try:
        connection = connect_to_db()
        cursor = connection.cursor()

        # SQL query to get the latest chain model metrics
        query = """
        WITH LatestMetrics AS (
            SELECT 
                chain_id,
                model_metrics_id,
                created_at,
                ROW_NUMBER() OVER (PARTITION BY chain_id ORDER BY created_at DESC) AS rn
            FROM 
                chain_model_metrics
        )
        SELECT 
            c.id AS chain_id,
            c.name AS chain_name,
            c.type AS chain_type,
            lm.model_metrics_id,
            lm.created_at
        FROM 
            LatestMetrics lm
        JOIN 
            chain c ON lm.chain_id = c.id
        WHERE 
            lm.rn = 1;
        """

        # Execute the query
        cursor.execute(query)

        # Fetch results
        results = cursor.fetchall()

        # Prepare the output
        formatted_results = []
        for row in results:
            chain_id, chain_name, chain_type, model_metrics_id, _ = row
            formatted_results.append(
                {
                    "id": model_metrics_id,
                    "label": f"{chain_type.capitalize()} // {model_metrics_id}",
                    "value": model_metrics_id,
                    "report": f"Chain: {chain_name}",
                    "chain_name": chain_name,
                    "chain_id": chain_id,
                    "type": chain_type,
                }
            )

        return formatted_results

    except mysql.connector.Error as err:
        print(f"Error: {err}")
    finally:
        # Clean up and close the connection
        if cursor:
            cursor.close()
        if connection:
            connection.close()
